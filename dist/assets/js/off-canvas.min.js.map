{"version":3,"sources":["off-canvas.js"],"names":["$document","$","document","$window","window","windowWidth","width","resize","newWindowWidth","this","resizeTO","clearTimeout","setTimeout","trigger","focusBeforeOffCanvas","touchStartX","$body","toggleBtn","offCanvasElement","offCanvasContent","offCanvasCanvas","headerHeight","outerHeight","docScrollLoc","currentLoc","offCanvasBreakpoint","attr","isiOS","navigator","userAgent","match","addClass","toggleOffCanvas","action","scrollTop","hasClass","Event","removeClass","css","animate","first","one","children","on","each","focus","tabbable","find","firstTabbable","lastTabbable","last","length","e","childShowingAmount","keyCode","preventDefault","which","shiftKey","trapKeyboardToOC","setOffCanvasHeight","setHeight","offCanvasHeight","surroundHeight","view","viewString","documentElement","body","height","prependTo","originalEvent","touches","clientX","touchRight","changedTouches","append","jQuery"],"mappings":"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","sourcesContent":["var $document = $(document);\nvar $window = $(window);\n\n// Resize delay\nvar windowWidth = $window.width();\n$window.resize(function() {\n    var newWindowWidth = $window.width();\n\n    if (windowWidth !== newWindowWidth) {\n        if (this.resizeTO) {\n            clearTimeout(this.resizeTO);\n        }\n        this.resizeTO = setTimeout(function() {\n            $(this).trigger('ocResizeEnd');\n        }, 150);\n    }\n    windowWidth = newWindowWidth;\n});\n\n(function ($) {\n    'use strict';\n\n    // Global variables\n    var $body = $('body');\n    var toggleBtn = $('.toggle-off-canvas');\n    var offCanvasElement = $('.l-off-canvas');\n    var offCanvasContent = $('.l-header');\n    var offCanvasOverlay = $('.l-off-canvas-overlay');\n    var offCanvasCanvas = $('.l-canvas');\n    var headerHeight = offCanvasContent.outerHeight();\n    var docScrollLoc = 0;\n    var currentLoc = 0;\n    var focusIndex = 0;\n    var tabbableCount = 0;\n    var focusBeforeOffCanvas;\n    var tapping = false;\n    var touchStartX;\n    var touchStartY;\n    var offCanvasBreakpoint = $body.attr('data-off-canvas-breakpoint');\n\n    // Get browser width with or without scrollbar\n    var viewport = function() {\n        var view = window;\n        var viewString = 'inner';\n\n        if (!('innerWidth' in window)) {\n            viewString = 'client';\n            view = document.documentElement || document.body;\n        }\n\n        return {\n            width: view[viewString + 'Width'],\n            height: view[viewString + 'Height']\n        };\n    };\n\n    // Check if is iOS device.\n    var isiOS = function() {\n        if (navigator.userAgent.match(/(iPod|iPhone|iPad)/)) {\n            $body.addClass('is-ios');\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    // Trap the keyboard to the off canvas elements when off canvas is showing\n    var trapKeyboardToOC = function() {\n\n        focusBeforeOffCanvas = $(':focus');\n\n        var tabbable = offCanvasElement.find(\n            'a[href],' +\n            'area[href],' +\n            'input:not([disabled]),' +\n            'select:not([disabled]),' +\n            'textarea:not([disabled]),' +\n            'button:not([disabled]),' +\n            'iframe,' +\n            'object,' +\n            'embed,' +\n            '[tabindex=\"0\"],' +\n            '[contenteditable]'\n        );\n\n        var firstTabbable = tabbable.first();\n        // var lastTabbable = offCanvasElement.find('.js-tabfix');\n        var lastTabbable = tabbable.last();\n\n        // Set focus on first input\n        var mlnActive = $('.mln__list .active').last();\n        \n        if (!mlnActive .length) {\n            firstTabbable.focus(); \n        }\n        \n        //Escape key press\n        offCanvasElement.on('keydown', function(e) {\n            var childShowingAmount = $(this).find('.mln__child--transitioning').length;\n\n            if (e.keyCode === 27 && !childShowingAmount) {\n                e.preventDefault();\n                toggleOffCanvas('hide');\n            }\n        });\n\n\n        // Redirect last tab to first input\n        lastTabbable.on('keydown', function(e) {\n            if (e.which === 9 && !e.shiftKey) {\n                e.preventDefault();\n                firstTabbable.focus();\n            }\n        });\n\n        // Redirect first shift+tab to last input\n        firstTabbable.on('keydown', function(e) {\n            if (e.which === 9 && e.shiftKey) {\n                e.preventDefault();\n                lastTabbable.focus();\n            }\n        });\n\n        // Focus on the off canvas element\n        offCanvasElement.focus();\n    };\n\n\n    var toggleOffCanvas = function(action) {\n        docScrollLoc = $document.scrollTop();\n\n        // Close off canvas\n        if ($body.hasClass('js-off-canvas-showing') || action === 'undefined' || action === 'hide') {   \n            $document.trigger($.Event('hide.offCanvas'));\n                     \n            $body.removeClass('js-off-canvas-showing');\n\n            // iOS Safari scroll canvas to the original canvas position\n            if (isiOS() && $body.hasClass('has-header-fixed')) {\n                offCanvasCanvas.css('top', '');\n\n                $body.animate({\n                    scrollTop: currentLoc\n                }, 0);\n            }\n\n            // After off canvas is hidden\n            $('.slide-over-transition')\n                .first()\n                .one('transitionend webkitTransitionEnd oTransitionEnd', function () {\n                    if(!$body.hasClass('js-off-canvas-showing')) {\n                        offCanvasElement.addClass('js-l-off-canvas-hide');\n                    }\n                    $document.trigger($.Event('hidden.offCanvas'));\n                }).children().on('transitionend webkitTransitionEnd oTransitionEnd', function () {\n                    return false;\n                });\n\n            // Syncing aria-expanded attribute on the menu button\n            toggleBtn.each(function(){\n                $(this).attr('aria-expanded', 'false');\n            });\n\n            // Focus on off canvas button\n            focusBeforeOffCanvas.focus();\n\n        } else if (!$body.hasClass('js-off-canvas-showing') || action === 'show') { // Open off canvas\n            $document.trigger($.Event('show.offCanvas'));\n            \n            offCanvasElement.removeClass('js-l-off-canvas-hide');\n\n            // iOS Safari set location of canvas so the user doesn't lose where they are\n            if (isiOS() && $body.hasClass('has-header-fixed')) {\n                offCanvasCanvas.css('top', -(docScrollLoc - headerHeight));\n            }\n\n            $body.addClass('js-off-canvas-showing');\n            currentLoc = docScrollLoc;\n\n            // Syncing aria-expanded attribute on the menu button\n            toggleBtn.each(function(){\n                $(this).attr('aria-expanded', 'true');\n            });\n            \n            $('.slide-over-transition')\n                .first()\n                .one('transitionend webkitTransitionEnd oTransitionEnd', function () {\n                    trapKeyboardToOC();\n                    $document.trigger($.Event('shown.offCanvas'));\n                }).children().on('transitionend webkitTransitionEnd oTransitionEnd', function () {\n                    return false;\n                });\n        }\n    };\n\n    // Set height of the off canvas element\n    var setOffCanvasHeight = function() {\n        if (!$body.hasClass('has-header-fixed')) {\n            var offCanvasHeight = $('.l-off-canvas__helper').outerHeight();\n            var surroundHeight = $('.l-surround').outerHeight();\n            var setHeight;\n\n            if (offCanvasHeight >= surroundHeight) {\n                setHeight = offCanvasHeight;\n            } else {\n                setHeight = surroundHeight;\n            }\n\n            setTimeout(function(){\n                if (viewport().width < offCanvasBreakpoint) {\n                    offCanvasElement.css('min-height', setHeight);\n                } else {\n                    offCanvasElement.css('min-height', '');\n                }\n            }, 300);\n        }\n    };\n\n    // Build overlay that covers up the page content so it can't be interacted with when off canvas nav is enabled\n    $('<div></div>')\n        .addClass('l-off-canvas-overlay')\n        .prependTo('.l-surround');\n\n    // Get X location of user touch\n    $body.on('touchstart', function(e) {\n        touchStartX = e.originalEvent.touches[0].clientX;\n    });\n\n    // If user touches and moves a bit, close the hide the off canvas\n    $body.on('touchmove', function(e) {\n        var touchRight = e.originalEvent.changedTouches[0].clientX;\n\n        if (touchStartX - 200 > touchRight && $body.hasClass('js-off-canvas-showing') &&\n            !$body.hasClass('off-canvas-right') && tapping !== true) {\n            toggleOffCanvas();\n        } else if (touchStartX + 200 < touchRight && $body.hasClass('js-off-canvas-showing') &&\n            $body.hasClass('off-canvas-right') && tapping !== true) {\n            toggleOffCanvas();\n        }\n    });\n\n    // If user clicks (or taps), close the off canvas nav\n    $('.toggle-off-canvas, .l-off-canvas-overlay').on('click', function() {\n        toggleOffCanvas();\n    });\n\n    $(window).on('load', function() {\n        setOffCanvasHeight();\n        \n        offCanvasElement\n            .addClass('js-l-off-canvas-hide')\n            .append('<span class=\"js-tabfix\" tabindex=\"0\" aria-hidden=\"true\"></span>');\n    });\n\n    // Resizer\n    $(window).on('ocResizeEnd', function() {\n        setOffCanvasHeight();\n    });\n}(jQuery));\n"]}