{"version":3,"sources":["off-canvas.js"],"names":["$","focusBeforeOffCanvas","touchStartX","$document","document","$window","window","$body","toggleBtn","offCanvasElement","offCanvasContent","offCanvasCanvas","headerHeight","outerHeight","docScrollLoc","currentLoc","offCanvasBreakpoint","attr","windowWidth","width","on","newWindowWidth","this","resizeTO","clearTimeout","setTimeout","trigger","agentHas","keyword","navigator","userAgent","toLowerCase","search","isSafari","ApplePaySetupFeature","safari","addClass","toggleOffCanvas","action","scrollTop","hasClass","Event","removeClass","css","animate","first","one","children","each","tabbable","find","firstTabbable","lastTabbable","last","length","e","childShowingAmount","key","preventDefault","shiftKey","trapKeyboardToOC","setOffCanvasHeight","setHeight","offCanvasHeight","surroundHeight","view","viewString","documentElement","body","height","prependTo","originalEvent","touches","clientX","touchRight","changedTouches","append","jQuery"],"mappings":"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","sourcesContent":["(function ($) {\n    'use strict';\n\n    // Global variables\n    var $document = $(document);\n    var $window = $(window);\n    var $body = $('body');\n    var toggleBtn = $('.toggle-off-canvas');\n    var offCanvasElement = $('.l-off-canvas');\n    var offCanvasContent = $('.l-header');\n    var offCanvasCanvas = $('.l-canvas');\n    var headerHeight = offCanvasContent.outerHeight();\n    var docScrollLoc = 0;\n    var currentLoc = 0;\n    var focusBeforeOffCanvas;\n    var tapping = false;\n    var touchStartX;\n    var offCanvasBreakpoint = $body.attr('data-off-canvas-breakpoint');\n\n    // Resize delay\n    var windowWidth = $window.width();\n    $window.on('resize', function() {\n        var newWindowWidth = $window.width();\n\n        if (windowWidth !== newWindowWidth) {\n            if (this.resizeTO) {\n                clearTimeout(this.resizeTO);\n            }\n            this.resizeTO = setTimeout(function() {\n                $(this).trigger('ocResizeEnd');\n            }, 150);\n        }\n        windowWidth = newWindowWidth;\n    });\n\n    // Get browser width with or without scrollbar\n    var viewport = function() {\n        var view = window;\n        var viewString = 'inner';\n\n        if (!('innerWidth' in window)) {\n            viewString = 'client';\n            view = document.documentElement || document.body;\n        }\n\n        return {\n            width: view[viewString + 'Width'],\n            height: view[viewString + 'Height']\n        };\n    };\n\n    function agentHas(keyword) {\n        return navigator.userAgent.toLowerCase().search(keyword.toLowerCase()) > -1;\n    }\n    \n    function isSafari() {\n        return (!!window.ApplePaySetupFeature || !!window.safari) && agentHas('Safari') && !agentHas('Chrome') && !agentHas('CriOS');\n    }\n\n    if (isSafari()) {\n        $body.addClass('is-ios');\n    }\n\n    // Trap the keyboard to the off canvas elements when off canvas is showing\n    var trapKeyboardToOC = function() {\n\n        focusBeforeOffCanvas = $(':focus');\n\n        var tabbable = offCanvasElement.find(\n            'a[href],' +\n            'area[href],' +\n            'input:not([disabled]),' +\n            'select:not([disabled]),' +\n            'textarea:not([disabled]),' +\n            'button:not([disabled]),' +\n            'iframe,' +\n            'object,' +\n            'embed,' +\n            '[tabindex=\"0\"],' +\n            '[contenteditable]'\n        );\n\n        var firstTabbable = tabbable.first();\n        // var lastTabbable = offCanvasElement.find('.js-tabfix');\n        var lastTabbable = tabbable.last();\n\n        // Set focus on first input\n        var mlnActive = $('.mln__list .active').last();\n        \n        if (!mlnActive .length) {\n            firstTabbable.trigger('focus'); \n        }\n        \n        //Escape key press\n        offCanvasElement.on('keydown', function(e) {\n            var childShowingAmount = $(this).find('.mln__child--transitioning').length;\n\n            if (e.key === 'Escape' && !childShowingAmount) {\n                e.preventDefault();\n                toggleOffCanvas('hide');\n            }\n        });\n\n        // Redirect last tab to first input\n        lastTabbable.on('keydown', function(e) {\n            if (e.key === 'Tab' && !e.shiftKey) {\n                e.preventDefault();\n                firstTabbable.trigger('focus');\n            }\n        });\n\n        // Redirect first shift+tab to last input\n        firstTabbable.on('keydown', function(e) {\n            if (e.key === 'Tab' && e.shiftKey) {\n                e.preventDefault();\n                lastTabbable.trigger('focus');\n            }\n        });\n\n        // Focus on the off canvas element\n        offCanvasElement.trigger('focus');\n    };\n\n\n    var toggleOffCanvas = function(action) {\n        docScrollLoc = $document.scrollTop();\n\n        // Close off canvas\n        if ($body.hasClass('js-off-canvas-showing') || action === 'undefined' || action === 'hide') {   \n            $document.trigger($.Event('hide.offCanvas'));\n                     \n            $body.removeClass('js-off-canvas-showing');\n\n            // iOS Safari scroll canvas to the original canvas position\n            if (isSafari() && $body.hasClass('has-header-fixed')) {\n                offCanvasCanvas.css('top', '');\n\n                $('html, body')\n                    .css('scroll-behavior', 'auto')\n                    .animate({\n                        scrollTop: currentLoc\n                    }, 0)\n                    .css('scroll-behavior', '');\n            }\n\n            // After off canvas is hidden\n            $('.slide-over-transition')\n                .first()\n                .one('transitionend webkitTransitionEnd oTransitionEnd', function () {\n                    if(!$body.hasClass('js-off-canvas-showing')) {\n                        offCanvasElement.addClass('js-l-off-canvas-hide');\n                    }\n                    $document.trigger($.Event('hidden.offCanvas'));\n                }).children().on('transitionend webkitTransitionEnd oTransitionEnd', function () {\n                    return false;\n                });\n\n            // Syncing aria-expanded attribute on the menu button\n            toggleBtn.each(function(){\n                $(this).attr('aria-expanded', 'false');\n            });\n\n            // Focus on off canvas button\n            focusBeforeOffCanvas.trigger('focus');\n\n        } else if (!$body.hasClass('js-off-canvas-showing') || action === 'show') { // Open off canvas\n            $document.trigger($.Event('show.offCanvas'));\n            \n            offCanvasElement.removeClass('js-l-off-canvas-hide');\n\n            // iOS Safari set location of canvas so the user doesn't lose where they are\n            if (isSafari() && $body.hasClass('has-header-fixed')) {\n                offCanvasCanvas.css('top', -(docScrollLoc - headerHeight));\n            }\n\n            $body.addClass('js-off-canvas-showing');\n            currentLoc = docScrollLoc;\n\n            // Syncing aria-expanded attribute on the menu button\n            toggleBtn.each(function(){\n                $(this).attr('aria-expanded', 'true');\n            });\n            \n            $('.slide-over-transition')\n                .first()\n                .one('transitionend webkitTransitionEnd oTransitionEnd', function () {\n                    trapKeyboardToOC();\n                    $document.trigger($.Event('shown.offCanvas'));\n                }).children().on('transitionend webkitTransitionEnd oTransitionEnd', function () {\n                    return false;\n                });\n        }\n    };\n\n    // Set height of the off canvas element\n    var setOffCanvasHeight = function() {\n        if (!$body.hasClass('has-header-fixed')) {\n            var offCanvasHeight = $('.l-off-canvas__helper').outerHeight();\n            var surroundHeight = $('.l-surround').outerHeight();\n            var setHeight;\n\n            if (offCanvasHeight >= surroundHeight) {\n                setHeight = offCanvasHeight;\n            } else {\n                setHeight = surroundHeight;\n            }\n\n            setTimeout(function(){\n                if (viewport().width < offCanvasBreakpoint) {\n                    offCanvasElement.css('min-height', setHeight);\n                } else {\n                    offCanvasElement.css('min-height', '');\n                }\n            }, 300);\n        }\n    };\n\n    // Build overlay that covers up the page content so it can't be interacted with when off canvas nav is enabled\n    $('<div></div>')\n        .addClass('l-off-canvas-overlay')\n        .prependTo('.l-surround');\n\n    // Get X location of user touch\n    $body.on('touchstart', function(e) {\n        touchStartX = e.originalEvent.touches[0].clientX;\n    });\n\n    // If user touches and moves a bit, close the hide the off canvas\n    $body.on('touchmove', function(e) {\n        var touchRight = e.originalEvent.changedTouches[0].clientX;\n\n        if (touchStartX - 200 > touchRight && $body.hasClass('js-off-canvas-showing') &&\n            !$body.hasClass('off-canvas-right') && tapping !== true) {\n            toggleOffCanvas();\n        } else if (touchStartX + 200 < touchRight && $body.hasClass('js-off-canvas-showing') &&\n            $body.hasClass('off-canvas-right') && tapping !== true) {\n            toggleOffCanvas();\n        }\n    });\n\n    // If user clicks (or taps), close the off canvas nav\n    $('.toggle-off-canvas, .l-off-canvas-overlay').on('click', function() {\n        toggleOffCanvas();\n    });\n\n    $(window).on('load', function() {\n        setOffCanvasHeight();\n        \n        offCanvasElement\n            .addClass('js-l-off-canvas-hide')\n            .append('<span class=\"js-tabfix\" tabindex=\"0\" aria-hidden=\"true\"></span>');\n    });\n\n    // Resizer\n    $(window).on('ocResizeEnd', function() {\n        setOffCanvasHeight();\n    });\n}(jQuery));\n"]}